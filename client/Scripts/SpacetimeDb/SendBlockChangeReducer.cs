// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

using System;
using SpacetimeDB;
using ClientApi;
using Newtonsoft.Json.Linq;

namespace StdbCraft.Scripts.SpacetimeDb
{
	public static partial class Reducer
	{
		public delegate void SendBlockChangeHandler(ReducerEvent reducerEvent, int x, int y, int z, int blockId);
		public static event SendBlockChangeHandler OnSendBlockChangeEvent;

		public static void SendBlockChange(int x, int y, int z, int blockId)
		{
			var _argArray = new object[] {x, y, z, blockId};
			var _message = new SpacetimeDBClient.ReducerCallRequest {
				fn = "send_block_change",
				args = _argArray,
			};
			SpacetimeDBClient.instance.InternalCallReducer(Newtonsoft.Json.JsonConvert.SerializeObject(_message, _settings));
		}

		[ReducerCallback(FunctionName = "send_block_change")]
		public static bool OnSendBlockChange(ClientApi.Event dbEvent)
		{
			if(OnSendBlockChangeEvent != null)
			{
				var args = ((ReducerEvent)dbEvent.FunctionCall.CallInfo).SendBlockChangeArgs;
				OnSendBlockChangeEvent((ReducerEvent)dbEvent.FunctionCall.CallInfo
					,(int)args.X
					,(int)args.Y
					,(int)args.Z
					,(int)args.BlockId
				);
				return true;
			}
			return false;
		}

		[DeserializeEvent(FunctionName = "send_block_change")]
		public static void SendBlockChangeDeserializeEventArgs(ClientApi.Event dbEvent)
		{
			var args = new SendBlockChangeArgsStruct();
			var bsatnBytes = dbEvent.FunctionCall.ArgBytes;
			using var ms = new System.IO.MemoryStream();
			ms.SetLength(bsatnBytes.Length);
			bsatnBytes.CopyTo(ms.GetBuffer(), 0);
			ms.Position = 0;
			using var reader = new System.IO.BinaryReader(ms);
			var args_0_value = SpacetimeDB.SATS.AlgebraicValue.Deserialize(SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.I32), reader);
			args.X = args_0_value.AsI32();
			var args_1_value = SpacetimeDB.SATS.AlgebraicValue.Deserialize(SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.I32), reader);
			args.Y = args_1_value.AsI32();
			var args_2_value = SpacetimeDB.SATS.AlgebraicValue.Deserialize(SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.I32), reader);
			args.Z = args_2_value.AsI32();
			var args_3_value = SpacetimeDB.SATS.AlgebraicValue.Deserialize(SpacetimeDB.SATS.AlgebraicType.CreatePrimitiveType(SpacetimeDB.SATS.BuiltinType.Type.I32), reader);
			args.BlockId = args_3_value.AsI32();
			dbEvent.FunctionCall.CallInfo = new ReducerEvent(ReducerType.SendBlockChange, "send_block_change", dbEvent.Timestamp, Identity.From(dbEvent.CallerIdentity.ToByteArray()), Address.From(dbEvent.CallerAddress.ToByteArray()), dbEvent.Message, dbEvent.Status, args);
		}
	}

	public partial class SendBlockChangeArgsStruct
	{
		public int X;
		public int Y;
		public int Z;
		public int BlockId;
	}

}
